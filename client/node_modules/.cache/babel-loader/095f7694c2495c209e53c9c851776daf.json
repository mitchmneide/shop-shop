{"ast":null,"code":"import { useReducer } from 'react';\nimport { UPDATE_PRODUCTS, UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from \"./actions\";\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n    case UPDATE_PRODUCTS:\n      return { ...state,\n        products: [...action.products]\n      };\n\n    case UPDATE_CATEGORIES:\n      return { ...state,\n        categories: [...action.categories]\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return { ...state,\n        currentCategory: action.currentCategory\n      };\n    // if it's none of these actions, do not update state at all and keep things the same!\n\n    default:\n      return state;\n  }\n};\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState);\n}","map":{"version":3,"names":["useReducer","UPDATE_PRODUCTS","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","products","categories","currentCategory","useProductReducer","initialState"],"sources":["/Users/mitcheleide/Desktop/shop-shop/client/src/utils/reducers.js"],"sourcesContent":["import {useReducer} from 'react';\nimport {\n    UPDATE_PRODUCTS,\n    UPDATE_CATEGORIES,\n    UPDATE_CURRENT_CATEGORY\n  } from \"./actions\";\n  \n  export const reducer = (state, action) => {\n    switch (action.type) {\n      // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n      case UPDATE_PRODUCTS:\n        return {\n          ...state,\n          products: [...action.products],\n        };\n        case UPDATE_CATEGORIES:\n            return {\n                ...state,\n                categories: [...action.categories]\n            }\n            case UPDATE_CURRENT_CATEGORY:\n  return {\n    ...state,\n    currentCategory: action.currentCategory\n  };\n      // if it's none of these actions, do not update state at all and keep things the same!\n      default:\n        return state;\n    }\n  };\n  export function useProductReducer(initialState) {\n    return useReducer(reducer, initialState);\n  }"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,OAAzB;AACA,SACIC,eADJ,EAEIC,iBAFJ,EAGIC,uBAHJ,QAIS,WAJT;AAME,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACxC,QAAQA,MAAM,CAACC,IAAf;IACE;IACA,KAAKN,eAAL;MACE,OAAO,EACL,GAAGI,KADE;QAELG,QAAQ,EAAE,CAAC,GAAGF,MAAM,CAACE,QAAX;MAFL,CAAP;;IAIA,KAAKN,iBAAL;MACI,OAAO,EACH,GAAGG,KADA;QAEHI,UAAU,EAAE,CAAC,GAAGH,MAAM,CAACG,UAAX;MAFT,CAAP;;IAIA,KAAKN,uBAAL;MACV,OAAO,EACL,GAAGE,KADE;QAELK,eAAe,EAAEJ,MAAM,CAACI;MAFnB,CAAP;IAII;;IACA;MACE,OAAOL,KAAP;EAnBJ;AAqBD,CAtBM;AAuBP,OAAO,SAASM,iBAAT,CAA2BC,YAA3B,EAAyC;EAC9C,OAAOZ,UAAU,CAACI,OAAD,EAAUQ,YAAV,CAAjB;AACD"},"metadata":{},"sourceType":"module"}